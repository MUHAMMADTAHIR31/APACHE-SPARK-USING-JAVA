import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;

/**
 *
 * @author Dell
 */
public class Mapping_Example {
    
    public static void main(String arg[]){
        
        List<Integer>  inputData= new ArrayList<>();
        inputData.add(35);
        inputData.add(12);
        inputData.add(90);
        inputData.add(20);
        
        Logger.getLogger("org.apache").setLevel(Level.WARNING);
        try{
            SparkConf conf = new SparkConf().setAppName("startingSpark").setMaster("local[*]");
            JavaSparkContext sc = new JavaSparkContext(conf);

            JavaRDD<Integer> myRdd= sc.parallelize(inputData);
            
            Integer result = myRdd.reduce((value1,value2)-> value1+value2);
           
            JavaRDD<Double> sqrtRdd = myRdd.map(value -> Math.sqrt(value));
            
            sqrtRdd.foreach( value -> System.out.println("Sqrt Result: "+value));
            
            System.out.println("Result:"+result);
            
            
            //how many elemnts in sqrtRdd
            //using just map and reduce
            JavaRDD<Long> singleIntegerRdd = sqrtRdd.map(value -> 1L);
            Long count = singleIntegerRdd.reduce((value1,value2) -> value1 + value2);
            System.out.println("Count Result:" +count);
            
            sc.close();
        }catch(Exception e){
            e.getMessage();
            //e.printStackTrace();
        }
    }    
}
